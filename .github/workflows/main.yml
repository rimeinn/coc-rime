---
'on':
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'
  workflow_dispatch:

# https://github.com/softprops/action-gh-release/issues/236
permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - runs-on: ubuntu-latest
            shell: bash -e
          - runs-on: macos-latest
            shell: bash -e
          - runs-on: windows-latest
            shell: msys2
    runs-on: ${{matrix.runs-on}}
    defaults:
      run:
        shell: ${{matrix.shell}} {0}
    steps:
      - uses: actions/checkout@v4
      - uses: msys2/setup-msys2@v2
        if: runner.os == 'Windows'
      - name: Install dependencies
        if: runner.os == 'Windows'
        # https://github.com/xmake-io/xmake/discussions/5699
        # xmake needs git
        # xmake search cxx for MinGW
        run: |
          pacman -Sy --noconfirm mingw-w64-x86_64-pkg-config \
            mingw-w64-x86_64-librime mingw-w64-x86_64-nodejs \
            mingw-w64-x86_64-gcc git
          ln -s c++ /mingw64/bin/cxx
      - name: Enable corepack
        run: |
          corepack enable
      - uses: actions/setup-node@v4
        # it uses cmd on windows, not msys2
        if: runner.os != 'Windows'
        with:
          node-version: latest
          registry-url: https://registry.npmjs.org
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: latest
      - name: Install dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get -y update
          sudo apt-get -y install librime-dev librime1
      - name: Install dependencies
        if: runner.os == 'macOS'
        run: |
          brew install librime
      - name: Build
        # bun pm pack
        # pkg-prebuilds-copy: command not found
        run: |
          bun install
          bun test
          npm pack
        env:
          NODE_ENV: production
      - uses: actions/upload-artifact@v4
        with:
          name: artifact-${{matrix.runs-on}}
          path: |
            prebuilds/*

  publish:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: artifact-*
          merge-multiple: true
          path: prebuilds
      - uses: softprops/action-gh-release@v2
        with:
          files: '*.tgz'
      - name: Publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NODE_AUTH_TOKEN}}
          NODE_ENV: production
        run: |
          npm publish
