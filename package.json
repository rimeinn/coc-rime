{
  "name": "coc-rime",
  "version": "0.1.5",
  "author": "Tony Fettes <feihaoxiang2014@gmail.com>",
  "main": "lib/index.js",
  "devDependencies": {
    "@jest/globals": "^30.1.2",
    "@types/expand-tilde": "^2.0.2",
    "@types/node": "^24.5.2",
    "biome": "^0.3.3",
    "coc.nvim": "^0.0.80",
    "esbuild": "^0.20.2",
    "esbuild-plugin-d.ts": "^1.3.1",
    "expand-tilde": "^2.0.2",
    "expandenv": "^1.0.0",
    "jest": "^30.1.3",
    "npm-run-all": "^4.1.5",
    "pkg-prebuilds": "^1.0.0",
    "rimraf": "^5.0.5",
    "ts-jest": "^29.4.3",
    "typescript": "^4.1.2",
    "vscode-languageserver-protocol": "^3.14.1",
    "vscode-languageserver-textdocument": "^1.0.1",
    "vscode-languageserver-types": "^3.14.0"
  },
  "activationEvents": [
    "*"
  ],
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "coc-rime configuration",
      "properties": {
        "rime.enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable coc-rime extension"
        },
        "rime.schemaId": {
          "type": "string",
          "description": "Rime schema selected when startup"
        },
        "rime.shortcut": {
          "type": "string",
          "default": "ㄓ",
          "description": "Rime source shortcut"
        },
        "rime.priority": {
          "type": "number",
          "default": 2,
          "description": "Priority of Rime completion source"
        },
        "rime.traits.shared_data_dir": {
          "oneOf": [
            {
              "type": [
                "string",
                "null"
              ]
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ],
          "default": [
            "$PREFIX/share/rime-data",
            "/usr/share/rime-data",
            "/run/current-system/sw/share/rime-data",
            "/sdcard/rime-data"
          ],
          "description": "shared data directory of rime. `null` will not use shared data (just use user data)"
        },
        "rime.traits.user_data_dir": {
          "oneOf": [
            {
              "type": [
                "string",
                "null"
              ]
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ],
          "default": [
            "~/.config/ibus/rime",
            "~/.config/fcitx/rime",
            "~/.local/share/fcitx5/rime",
            "/sdcard/rime"
          ],
          "description": "user data directory of rime. `null` will not use user data (just use shared data)"
        },
        "rime.traits.log_dir": {
          "type": [
            "string",
            "null"
          ],
          "default": "",
          "description": "log directory of rime. By default, it will be `~/.config/coc/extensions/coc-rime-data`. `null` will disable logging"
        },
        "rime.traits.distribution_name": {
          "type": [
            "string",
            "null"
          ],
          "default": "Rime"
        },
        "rime.traits.distribution_code_name": {
          "type": "string",
          "default": "coc-rime"
        },
        "rime.traits.distribution_version": {
          "type": "string",
          "default": "0.1.3"
        },
        "rime.traits.app_name": {
          "type": [
            "string",
            "null"
          ],
          "default": "rime.coc-rime",
          "description": "Pass a C-string constant in the format \"rime.x\" where 'x' is the name of your application. Add prefix \"rime.\" to ensure old log files are automatically cleaned."
        },
        "rime.traits.min_log_level": {
          "type": "integer",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "default": 3,
          "description": "Minimal level of logged messages. Value is passed to Glog library using FLAGS_minloglevel variable. 0 = INFO (default), 1 = WARNING, 2 = ERROR, 3 = FATAL"
        },
        "rime.ui.indices": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "①",
            "②",
            "③",
            "④",
            "⑤",
            "⑥",
            "⑦",
            "⑧",
            "⑨",
            "⓪"
          ],
          "description": "indices for IME"
        },
        "rime.ui.left": {
          "type": "string",
          "default": "<|",
          "description": "left symbol for IME"
        },
        "rime.ui.right": {
          "type": "string",
          "default": "|>",
          "description": "right symbol for IME"
        },
        "rime.ui.left_sep": {
          "type": "string",
          "default": "[",
          "description": "left separator for IME"
        },
        "rime.ui.right_sep": {
          "type": "string",
          "default": "]",
          "description": "right separator for IME"
        },
        "rime.ui.cursor": {
          "type": "string",
          "default": "|",
          "description": "cursor symbol for IME"
        }
      }
    },
    "commands": [
      {
        "command": "rime.source.enable",
        "title": "Enable the Rime source"
      },
      {
        "command": "rime.source.disable",
        "title": "Disable the Rime source"
      },
      {
        "command": "rime.source.toggle",
        "title": "Toggle the Rime source"
      },
      {
        "command": "rime.enable",
        "title": "Enable the Rime IME"
      },
      {
        "command": "rime.disable",
        "title": "Disable the Rime IME"
      },
      {
        "command": "rime.toggle",
        "title": "Toggle the Rime IME"
      }
    ]
  },
  "description": "Rime input method integration of coc.nvim",
  "engines": {
    "coc": "^0.0.80"
  },
  "keywords": [
    "coc.nvim",
    "rime"
  ],
  "license": "MIT",
  "packageManager": "bun@1.2.20",
  "scripts": {
    "test": "jest",
    "lint": "biome lint",
    "clean": "rimraf lib",
    "watch": "node esbuild.js --watch",
    "prepack": "xmake -y && xmake install && pkg-prebuilds-copy --baseDir build/Release --source rime.node --name=rime --strip --napi_version=7 && node esbuild.js",
    "prepare": "npm-run-all clean prepack"
  }
}
